#!/usr/bin/env python3
#-*- coding: utf-8 -*-
#
# SCRIPT TO GET WEATHER INFORMATION OF A LOCATION FOR SPECIFIC DATE
#            USING weatherapi.com's API
#
import argparse
import requests


URL = """
   https://api.weatherapi.com/v1/{state}.json?key={access_key}&q='{location}'&dt={find_date}&days=5
""".strip()

ACCESS_KEY='' # ACCESS KEY SHOULD BE HERE


def get_data(state, location, date):

    url = URL.format(state=state, access_key=ACCESS_KEY, location=location,
                     find_date=date)
    print(url)

    try:
        api = requests.get(url)
    except requests.ConnectionError as e:
        raise Exception("No internet connection")

    return api.json()


def date_format(date):
    if date.count('/') != 2:
        raise argparse.ArgumentTyepError("Date format is DD/MM/YYYY")

    day, month, year = date.split("/")
    # TODO: February has 28 or 29 days. Incorporate that in.
    if not(int(day) >= 1 and int(day) <= 31):
        raise argparse.ArgumentTypeError("day should be between 1 and 31")
    if not(int(month) >= 1 and int(month) <= 12):
        raise argparse.ArgumentTypeError("month should be between 1 and 12")
    if len(year) != 4:
        raise argparse.ArgumentTypeError("full year format required e.g 2022")
    return year, month, day


parser = argparse.ArgumentParser(
    conflict_handler="resolve",
    description="Get weather data"
)

parser.add_argument(
    "--location",
    help="the location which the weather details is derived",
    default="Spokane, WA"
)

parser.add_argument(
    "--date",
    help="date with format: DD/MM/YYYY",
    type=date_format,
)


args = parser.parse_args()
while True:
    if args.date is None:
        input_date = input("Enter date with format (DD/MM/YYYY): ")
        if input_date.count('/') != 2:
            continue
        args.date = date_format(input_date)

    location = args.location.split(',')
    if len(location) == 1:
        location = args.location
    else:
        location = ','.join(list(map(lambda x: x.strip(), location)))

    content = get_data("history", location, '-'.join(args.date))
    if "error" in content:
        print(content["error"]["message"] + "\n")
        args.date = None
        continue

    print("NAME: ", content['location']['name'])
    print("REGION: ", content['location']['region'])
    print("COUNTRY: ", content['location']['country'])
    print('\n')

    hourly_data = []
    forecast_data = content["forecast"]["forecastday"]

    if forecast_data:
        hourly_data = forecast_data[0]["hour"]

    for data in hourly_data:
        time = data["time"]
        temp = str(data["temp_f"]) + "Â°F"
        humidity = str(data["humidity"]) + "%"
        print(time, temp, humidity)
        print('\n')

    if not hourly_data:
        print("Weather data is not present\n")

    quit = input("Do you want to quit? (Y/y): ")
    if quit == 'y' or quit == 'Y':
        break
    args.date = None

